/*
Deployment script for NinjaManagerASP

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "NinjaManagerASP"
:setvar DefaultFilePrefix "NinjaManagerASP"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key 50c59b75-74fc-46a7-9486-b4676e70ec86, bc724464-5858-4969-9854-b93857e0892f is skipped, element [dbo].[NinjaEquipment].[Id] (SqlSimpleColumn) will not be renamed to Ninja_Id';


GO
PRINT N'Rename refactoring operation with key 429aa955-9fb0-4826-9dd3-2738d097a1f5 is skipped, element [dbo].[NinjaEquipment].[EquipmentId] (SqlSimpleColumn) will not be renamed to Equipment_Id';


GO
PRINT N'Creating [dbo].[Category]...';


GO
CREATE TABLE [dbo].[Category] (
    [CategoryName] NCHAR (10) NOT NULL,
    PRIMARY KEY CLUSTERED ([CategoryName] ASC)
);


GO
PRINT N'Creating [dbo].[Equipment]...';


GO
CREATE TABLE [dbo].[Equipment] (
    [Id]           INT        NOT NULL,
    [Name]         NCHAR (10) NULL,
    [Price]        INT        NULL,
    [Strength]     INT        NULL,
    [Agility]      INT        NULL,
    [Intelligence] INT        NULL,
    [Category]     NCHAR (10) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Ninja]...';


GO
CREATE TABLE [dbo].[Ninja] (
    [Id]   INT        NOT NULL,
    [Name] NCHAR (10) NULL,
    [Gold] INT        NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[NinjaEquipment]...';


GO
CREATE TABLE [dbo].[NinjaEquipment] (
    [Ninja_Id]     INT NOT NULL,
    [Equipment_Id] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Equipment_Id] ASC, [Ninja_Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Category]...';


GO
ALTER TABLE [dbo].[Equipment] WITH NOCHECK
    ADD CONSTRAINT [FK_Category] FOREIGN KEY ([Category]) REFERENCES [dbo].[Category] ([CategoryName]);


GO
PRINT N'Creating [dbo].[FK_Ninja]...';


GO
ALTER TABLE [dbo].[NinjaEquipment] WITH NOCHECK
    ADD CONSTRAINT [FK_Ninja] FOREIGN KEY ([Ninja_Id]) REFERENCES [dbo].[Ninja] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Equipment]...';


GO
ALTER TABLE [dbo].[NinjaEquipment] WITH NOCHECK
    ADD CONSTRAINT [FK_Equipment] FOREIGN KEY ([Equipment_Id]) REFERENCES [dbo].[Equipment] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '50c59b75-74fc-46a7-9486-b4676e70ec86')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('50c59b75-74fc-46a7-9486-b4676e70ec86')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bc724464-5858-4969-9854-b93857e0892f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bc724464-5858-4969-9854-b93857e0892f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '429aa955-9fb0-4826-9dd3-2738d097a1f5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('429aa955-9fb0-4826-9dd3-2738d097a1f5')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Equipment] WITH CHECK CHECK CONSTRAINT [FK_Category];

ALTER TABLE [dbo].[NinjaEquipment] WITH CHECK CHECK CONSTRAINT [FK_Ninja];

ALTER TABLE [dbo].[NinjaEquipment] WITH CHECK CHECK CONSTRAINT [FK_Equipment];


GO
PRINT N'Update complete.';


GO
